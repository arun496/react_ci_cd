# name: CI/CD for React App

# # Trigger workflow only when "push" event is triggered for "main" branch
# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]


# jobs:
#   workflow-react:
#     runs-on: ubuntu-latest
#     steps:
#         # First we have to checkout i.e. have code from our repository into the runner
#       - name: Checkout our code
#         uses: actions/checkout@v2
#         # Then we have to setup the node environment in the runner using Action from Marketplace
#       - name: Use custom node.js version
#         uses: actions/setup-node@v1
#         with:
#           # Passing parameter for specific Node.js version
#           node-version: "14.x"
#         # Installing dependencies using "npm ci" which is much preferred compared to "npm i" in CI/CD environments
#       - name: Install dependencies
#         run: npm ci
#         # To test React app use the command which triggers "test script" in your React app
#       - name: Run test
#         # This below test command will also help you generate test reports of your App
#         run: npm run test -- --coverage
#         # Also this is a "must" Environment Variable to be passed for this step
#         env:
#           CI: true
#         # Now "Build" process has to be performed only if the event triggered is "push" event
#       - name: Build project
#         if: github.event_name == 'push'
#         run: npm run build
#         # Similarly if "push" event then deploy React App to Heroku Platform
#       - name: Deploy project
#         if: github.event_name == 'push'
#         # To Deploy over Heroku we have using the below action from the Marketplace
#         uses: akhileshns/heroku-deploy@v3.12.12
#         # Also have to pass these credentials to authenticate and safely deploy
#         # We have passed these parameters using Github Secrets so that we don't expose it all over
#         # So go to setting tab, secrets tab and add secrets in your repository
#         with:
#           # Can find API key in User's Dashbpard
#           heroku_api_key: ${{ secrets.MY_HEROKU_API_KEY }}
#           # Now select "unique" App name to deploy over Heroku smoothly
#           heroku_app_name: ${{ secrets.MY_HEROKU_APP_NAME }}
#           # Pass your Heroku registered email
#           heroku_email: ${{ secrets.MY_HEROKU_EMAIL }}





name: CI of Container

on:
  push:
    branches: [ "main" ]

jobs:
  # build_and_push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Login to Docker hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.MY_DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.MY_DOCKERHUB_TOKEN }}
      
  #     - name: Build container image
  #       run: |
  #           ls
  #           pwd
  #           cd /home/runner/work/react_ci_cd/react_ci_cd/
  #           docker build -t arun496/react-frontend -f Dockerfile .

  #     - name: Push image to Docker Hub
  #       run: docker push arun496/react-frontend
  
  deploy:
    runs-on: self-hosted
    # needs: build_and_push
    steps:
      # - name: Deploy to a Droplet
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.MY_DIGITALOCEAN_HOST }}
      #     username: ${{ secrets.MY_DIGITALOCEAN_USERNAME }}
      #     password: ${{ secrets.MY_DIGITALOCEAN_PASSWORD }}

      # - name: Login to Docker hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.MY_DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.MY_DOCKERHUB_TOKEN }}
      
      - name: Pull Docker image
        run: docker pull arun496/react-frontend
      
      - name: Run React App container of pulled Docker image
        run: docker run -p 3000:3000 arun496/react-frontend